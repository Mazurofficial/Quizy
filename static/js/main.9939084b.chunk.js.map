{"version":3,"sources":["components/FinishedQuiz/FinishedQuiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/AnsweraList/AnswerItem/AnswerItem.module.scss","components/UI/Button/Button.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnsweraList/AnsweraList.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnsweraList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnsweraList/AnsweraList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","form/formFramework.js","containers/Auth/Auth.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuToggle","props","classes","s","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","renderLinks","map","link","index","activeClassName","active","closeMenu","this","close","Component","Layout","state","menu","toggleMenuHandler","setState","closeMenuHandler","wrapper","children","AnswerItem","item","answerState","onAnswerClick","answer","id","text","AnswerList","list","answers","ActiveQuiz","top","head","answerNumber","question","counter","quizLenth","Button","type","disabled","FinishedQuiz","rightAnswersCount","Object","keys","results","reduce","total","key","isFinished","checkList","quiz","quizItem","result","length","buttonBlock","onRetry","Quiz","activeQuestion","quizName","right_answer","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","Input","isInvalid","valid","touched","shouldValidate","inputType","cls","htmlFor","Math","random","invalid","value","onChange","errorMessage","createControl","config","validation","validateControl","isValid","required","trim","email","is","minLength","Auth","isFormValid","formControls","password","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","forEach","name","renderInputs","onSubmit","btnblock","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","rightAnswerId","addQuestionHandler","concat","questionItem","createQuizHandler","a","axios","post","console","log","changeHandler","selectChangeHandler","QuizList","quizList","get","then","response","renderQuizList","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","application","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9939084b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FinishedQuiz_wrapper__fhUrw\",\"isFinished\":\"FinishedQuiz_isFinished__3bfwf\",\"checkList\":\"FinishedQuiz_checkList__26cYB\",\"result\":\"FinishedQuiz_result__3gB_P\",\"buttonBlock\":\"FinishedQuiz_buttonBlock__3biFQ\",\"success\":\"FinishedQuiz_success__2EeEd\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ActiveQuiz_item__UvN09\",\"top\":\"ActiveQuiz_top__38OvZ\",\"head\":\"ActiveQuiz_head__2DV4j\",\"counter\":\"ActiveQuiz_counter__3dYUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AnswerItem_item__2JHjG\",\"success\":\"AnswerItem_success__T60JS\",\"error\":\"AnswerItem_error__CfsHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"primary\":\"Button_primary__CVuDV\",\"success\":\"Button_success__qdwm8\",\"error\":\"Button_error__A4xET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"btnblock\":\"Auth_btnblock__VgQZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\",\"answers\":\"QuizCreator_answers__2JwhW\",\"btnblock\":\"QuizCreator_btnblock__1AT9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AnsweraList_list__3hJLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","import React from 'react'\nimport s from './MenuToggle.module.scss'\n\nconst MenuToggle = props => {\n    let classes = [\n        s.MenuToggle,\n        'fa'\n    ]\n\n    if(props.isOpen){\n        classes.push('fa-times')\n        classes.push(s.open)\n    }else {\n        classes.push('fa-bars')\n    }\n\n    return(\n        <i\n            className={classes.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","import React from \"react\";\nimport s from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={s.Backdrop} onClick={props.onClick}/>\n\nexport default Backdrop","import React,{Component,Fragment} from 'react'\nimport s from './Drawer.module.scss'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from \"react-router-dom\";\n\nconst links = [\n    {to: '/', label: 'List', exact: true},\n    {to: '/auth', label: 'Authentication', exact: false},\n    {to: '/quiz-creator', label: 'Quiz-creator', exact: false}\n]\n\nclass Drawer extends Component{\n\n    renderLinks = () => {\n        return(\n            links.map((link,index)=>{\n                return(\n                    <li key={index}>\n                        <NavLink\n                            to={link.to}\n                            exact={link.exact}\n                            activeClassName={s.active}\n                            onClick={this.props.closeMenu}\n                        >\n                            {link.label }\n                        </NavLink>\n                    </li>\n                )\n            })\n        )\n    }\n\n    render() {\n        let classes = [\n            s.Drawer\n        ]\n\n        if(!this.props.isOpen){\n            classes.push(s.close)\n        }\n        return(\n            <Fragment>\n                <nav className={classes.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.closeMenu} /> : null}\n            </Fragment>\n        )\n    }\n}\n\nexport default Drawer\n","import React, {Component} from 'react'\nimport s from './Layout.module.scss'\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n\n    }\n\n    closeMenuHandler = () => {\n        this.setState({\n            menu: false\n        })\n\n    }\n\n    render() {\n        return(\n            <div className={s.Layout}>\n                <Drawer\n                    isOpen={this.state.menu}\n                    closeMenu={this.closeMenuHandler}\n                />\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n                <main className={s.wrapper}>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout","import React from 'react'\nimport s from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n    const classes = [s.item]\n\n    if(props.answerState){\n        classes.push(s[props.answerState])\n    }\n\n    return(\n        <li\n            className={classes.join(' ')}\n            onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {\n                props.answer.text\n            }\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport s from './AnsweraList.module.scss'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswerList = props => {\n    return(\n        <ul className={s.list }>\n            {props.answers.map((answer,index) => {\n                return(\n                    <AnswerItem\n                        key = {index}\n                        answer = {answer}\n                        onAnswerClick={props.onAnswerClick}\n                        answerState={props.answerState ? props.answerState[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default AnswerList","import React from 'react'\nimport s from './ActiveQuiz.module.scss'\nimport AnswerList from \"./AnsweraList/AnsweraList\";\n\nconst ActiveQuiz = (props) => {\n    return(\n        <div className={s.wrapper}>\n            <div className={s.item}>\n                <div className={s.top}>\n                    <h2 className={s.head}>\n                        <span>{props.answerNumber}.</span> {props.question}\n                    </h2>\n                    <p className={s.counter}>\n                        {props.answerNumber} of {props.quizLenth}\n                    </p>\n                </div>\n                <AnswerList\n                    answers={props.answers}\n                    onAnswerClick={props.onAnswerClick}\n                    answerState={props.answerState}\n                />\n            </div>\n        </div>\n\n    )\n}\n\nexport default ActiveQuiz","import React from 'react'\nimport s from './Button.module.scss'\n\nconst Button = props => {\n\n    let classes = [\n        s.Button,\n        s[props.type]\n    ]\n\n    return(\n        <button onClick={props.onClick}\n                className={classes.join(' ')}\n                disabled={props.disabled}>\n            {props.children}\n        </button>\n    )\n}\n\nexport default Button","import React from 'react'\nimport s from './FinishedQuiz.module.scss'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props =>{\n\n    const rightAnswersCount = Object.keys(props.results).reduce((total,key) => {\n        if(props.results[key] === 'success'){\n            total++\n        }\n\n        return total\n    },0)\n\n    return(\n        <div className={s.wrapper}>\n            <h1 className={s.isFinished}>is finished</h1>\n            <ul className={s.checkList}>\n                {props.quiz.map((quizItem,index) => {\n                        let classes = [\n                            'fa',\n                            props.results[quizItem.id] === 'success' ? 'fa-check' : 'fa-times',\n                            s[props.results[quizItem.id]]\n                        ]\n                        return(\n                            <li key={index}>\n                                <p><span>{index + 1}. </span>{quizItem.question}</p>\n                                <i className={classes.join(' ')} />\n                            </li>\n                        )\n                    })}\n            </ul>\n            <p className={s.result}>\n                Number of right answers: {rightAnswersCount} / {props.quiz.length}\n            </p>\n            <div className={s.buttonBlock}>\n                <Button type='primary' onClick={props.onRetry}>\n                    repeat\n                </Button>\n                <Link to='/'>\n                    <Button type='success' >\n                        test list\n                    </Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import React, {Component} from 'react'\nimport s from './Quiz.module.scss'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component{\n    state = {\n        activeQuestion: 0,\n        isFinished: false ,\n        answerState: null, // { [id]: 'success' 'error' }\n        results: {},\n        quizName: 'Name of quiz',\n        quiz: [\n            {\n                id: 1,\n                question: 'First question ?',\n                answers: [\n                    {text: 'answer 1', id:1},\n                    {text: 'answer 2', id:2},\n                    {text: 'answer 3', id: 3},\n                ],\n                right_answer: 2,\n            },\n            {\n                id: 2,\n                question: 'Second question ?',\n                answers: [\n                    {text: 'answer 1', id:1},\n                    {text: 'answer 2', id:2},\n                    {text: 'answer 3', id: 3},\n                ],\n                right_answer: 2,\n            }\n        ]\n    }\n\n    onAnswerClickHandler = answerId =>{\n\n        if(this.state.answerState){\n            const key = Object.keys(this.state.answerState)[0]\n            if(this.state.answerState[key] === 'success'){\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.right_answer === answerId){\n\n            if(!results[question.id]){\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: { [answerId] : 'success'},\n            })\n\n            const timeout = window.setTimeout(() => {\n\n                if (this.isQuizFinished()){\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n\n                window.clearTimeout(timeout)\n            }, 500)\n\n        }else {\n            results[question.id] = 'error'\n            this.setState({\n                results,\n                answerState: { [answerId] : 'error'}\n            })\n        }\n    }\n\n    isQuizFinished(){\n        return(this.state.activeQuestion + 1 === this.state.quiz.length)\n    }\n\n    retryHandler = () => {\n         this.setState({\n             activeQuestion: 0,\n             isFinished: false ,\n             answerState: null, // { [id]: 'success' 'error' }\n             results: {}\n         })\n    }\n\n\n    render() {\n        return(\n            <div className={s.Quiz}>\n                {/*<img src={logo} alt=\"logo\"/>*/}\n                <h1>{this.state.quizName}</h1>\n                <div className={s.wrapper}>\n                    {\n                        this.state.isFinished\n                            ? <FinishedQuiz\n                                    results={this.state.results}\n                                    quiz={this.state.quiz}\n                                    onRetry ={this.retryHandler}\n                            />\n                            : <ActiveQuiz\n                                    question={this.state.quiz[this.state.activeQuestion].question}\n                                    answers={this.state.quiz[this.state.activeQuestion].answers}\n                                    onAnswerClick={this.onAnswerClickHandler}\n                                    quizLenth={this.state.quiz.length}\n                                    answerNumber={this.state.activeQuestion + 1}\n                                    answerState={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React from 'react'\nimport s from './Input.module.scss'\n\nconst Input = props => {\n\n    const isInvalid = ({valid, touched, shouldValidate}) => {\n        return !valid && touched && shouldValidate\n    }\n\n\n    const inputType = props.type || 'text'\n    const cls = [s.Input]\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if(isInvalid(props)){\n        cls.push(s.invalid)\n    }\n\n    return(\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {\n                isInvalid(props)\n                ? <p>{props.errorMessage || 'Check the correction on information'}</p>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default Input","import is from \"is_js\";\n\nexport function createControl(config,validation){\n    return{\n        ...config,\n        validation,\n        valid:!validation,\n        touched: false,\n        value:''\n    }\n}\n\nexport function validateControl(value, validation){\n\n    if(!validation){\n        return true\n    }\n\n    let isValid = true\n\n    if(validation.required){\n        isValid = value.trim(' ') !== '' && isValid\n\n    }\n    if(validation.email){\n        isValid = is.email(value) && isValid\n    }\n    if(validation.minLength){\n        isValid = value.length >= validation.minLength &&isValid\n    }\n\n    return isValid\n}","import React,{Component} from 'react'\nimport s from './Auth.module.scss'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport {validateControl} from \"../../form/formFramework\";\n\nexport default class Auth extends Component{\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Enter correct email \"example@test.com\"',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Password',\n                errorMessage: 'Enter correct password \"min: 6 symbols\"',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n    loginHandler = () => {\n\n    }\n\n    registerHandler = () => {\n\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    onChangeHandler = (event, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = validateControl(control.value,control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name =>{\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n\n        this.setState({\n            formControls, isFormValid\n        })\n    }\n\n    renderInputs = () => {\n        return Object.keys(this.state.formControls).map((controlName,index)=>{\n            const control = this.state.formControls[controlName]\n            return(\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    errorMessage={control.errorMessage}\n                    shouldValidate={!!control.validation}\n                    onChange={event => {\n                        this.onChangeHandler(event,controlName)\n                    }}\n                />\n            )\n        })\n    }\n\n    render() {\n        return(\n            <div className={s.Auth}> \n                <h1>Authentication</h1>\n                <form onSubmit={this.submitHandler}>\n\n                    {this.renderInputs()}\n\n                    <div className={s.btnblock}>\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Login\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                        >\n                            Register\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport s from './Select.module.scss'\n\nconst Select = props => {\n\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return(\n        <div className={s.Select}>\n            <label htmlFor={htmlFor}>\n                {props.label}\n            </label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option,index)=>{\n                    return(\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","import React,{Component,Fragment} from 'react'\nimport s from './QuizCreator.module.scss'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport {createControl,validateControl } from \"../../form/formFramework\";\nimport Select from \"../../components/UI/Select/Select\";\nimport axios from \"axios\";\n\nconst createOptionControl = (number) => {\n    return createControl({\n        label:`Variant ${number}`,\n        errorMessage: \"Value can't be empty\",\n        value: '',\n        id: number\n    },{\n        required:true\n    })\n}\n\nconst createFormControls = () => {\n    return {\n        question: createControl({\n            label: 'Enter the question',\n            errorMessage: \"Question can't be empty\"\n        },{\n            required: true\n        }),\n        option1: createOptionControl(1),\n        option2:createOptionControl(2),\n        option3:createOptionControl(3),\n        option4:createOptionControl(4)\n    }\n}\n\nexport default class QuizCreator extends Component{\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n\n        const quiz = this.state.quiz.concat()\n        const index = quiz.length + 1\n        const {question, option1, option2, option3, option4} = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {\n                    text: option1.value,\n                    id: option1.id\n                },\n                {\n                    text: option2.value,\n                    id: option2.id\n                },\n                {\n                    text: option3.value,\n                    id: option3.id\n                },\n                {\n                    text: option4.value,\n                    id: option4.id\n                },\n            ]\n        }\n\n        quiz.push(questionItem)\n\n        this.setState({\n            quiz,\n            rightAnswerId: 1,\n            isFormValid: false,\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = async event => {\n        event.preventDefault()\n\n        try{\n            await axios.post('https://react-quizy-bcaf7-default-rtdb.firebaseio.com/quizes.json', this.state.quiz)\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControls()\n            })\n        } catch (e){\n            console.log(e)\n        }\n    }\n\n\n\n    changeHandler = (value, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = value\n        control.touched = true\n        control.valid = validateControl(control.value,control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name =>{\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n\n        this.setState({\n            formControls, isFormValid\n        })\n    }\n\n    renderInputs = () => {\n        return Object.keys(this.state.formControls).map((controlName,index)=>{\n            const control = this.state.formControls[controlName]\n            return(\n                <Fragment key={index + controlName}>\n                    <Input\n                        type={control.type}\n                        value={control.value}\n                        valid={control.valid}\n                        touched={control.touched}\n                        label={control.label}\n                        errorMessage={control.errorMessage}\n                        shouldValidate={!!control.validation}\n                        onChange={event => {\n                            this.changeHandler(event.target.value,controlName)\n                        }}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Fragment>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render(){\n        return(\n            <div className={s.QuizCreator}>\n                <h1>QuizCreator </h1>\n                <form onSubmit={this.submitHandler}>\n\n                    {this.renderInputs()}\n\n                    <Select\n                        label='Select the right answer'\n                        value={this.state.rightAnswerId}\n                        onChange={this.selectChangeHandler}\n                        options={[\n                            {\n                                text:1,\n                                value:1,\n                            },\n                            {\n                                text:2,\n                                value:2,\n                            },\n                            {\n                                text:3,\n                                value:3,\n                            },\n                            {\n                                text:4,\n                                value:4,\n                            }\n                        ]}\n                    />\n\n                    <div className={s.btnblock}>\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Add question\n                        </Button>\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >\n                            Create quiz\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React,{Component} from 'react'\nimport s from './QuizList.module.scss'\nimport {NavLink} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class QuizList extends Component{\n\n    quizList = [1,2,3]\n\n    renderQuizList(){\n        return this.quizList.map((quiz,index)=>{\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={'/quiz/' + quiz}\n                    >\n                        Quiz {quiz}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    componentDidMount() {\n        axios.get('https://react-quizy-bcaf7-default-rtdb.firebaseio.com/quiz.json').then(response => {\n            console.log(response)\n        })\n    }\n\n    render(){\n        return(\n            <div className={s.QuizList}>\n                <div>\n                    <h1>QuizList</h1>\n                    <ul>\n                        {this.renderQuizList()}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}","import './App.css';\nimport {Switch, Route} from 'react-router-dom'\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\"\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n          <Route path='/auth' component={Auth} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/' component={QuizList} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst application = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      {application}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}