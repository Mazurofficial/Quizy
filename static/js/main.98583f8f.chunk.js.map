{"version":3,"sources":["components/FinishedQuiz/FinishedQuiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/Navigation/Drawer/Drawer.module.scss","hoc/Layout/Layout.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/AnsweraList/AnswerItem/AnswerItem.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/Header/Header.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnsweraList/AnsweraList.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","components/Navigation/MenuToggle/MenuToggle.js","img/logo.svg","components/Header/Header.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnsweraList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnsweraList/AnsweraList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","form/formFramework.js","containers/Auth/Auth.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Backdrop","props","className","s","onClick","links","to","label","exact","Drawer","renderLinks","map","link","index","activeClassName","active","closeMenu","classes","this","isOpen","push","close","join","Component","MenuToggle","open","onToggle","Header","menu","toggleMenu","src","logo","alt","Layout","state","toggleMenuHandler","setState","closeMenuHandler","wrapper","children","AnswerItem","item","answerState","onAnswerClick","answer","id","text","AnswerList","list","answers","ActiveQuiz","top","head","answerNumber","question","counter","quizLenth","Button","type","disabled","FinishedQuiz","rightAnswersCount","Object","keys","results","reduce","total","key","isFinished","quiz","name","checkList","quizItem","result","length","buttonBlock","onRetry","axios","create","baseURL","Loader","Quiz","activeQuestion","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","quizName","Input","isInvalid","valid","touched","shouldValidate","inputType","cls","htmlFor","Math","random","invalid","value","onChange","errorMessage","createControl","config","validation","validateControl","isValid","required","trim","email","is","minLength","Auth","isFormValid","formControls","password","loginHandler","a","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","forEach","renderInputs","onSubmit","btnblock","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","QuizList","quizes","renderQuizList","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","application","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98583f8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FinishedQuiz_wrapper__fhUrw\",\"isFinished\":\"FinishedQuiz_isFinished__3bfwf\",\"checkList\":\"FinishedQuiz_checkList__26cYB\",\"result\":\"FinishedQuiz_result__3gB_P\",\"buttonBlock\":\"FinishedQuiz_buttonBlock__3biFQ\",\"success\":\"FinishedQuiz_success__2EeEd\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ActiveQuiz_item__UvN09\",\"top\":\"ActiveQuiz_top__38OvZ\",\"head\":\"ActiveQuiz_head__2DV4j\",\"counter\":\"ActiveQuiz_counter__3dYUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\",\"wrapper\":\"Layout_wrapper__2MgzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AnswerItem_item__2JHjG\",\"success\":\"AnswerItem_success__T60JS\",\"error\":\"AnswerItem_error__CfsHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"primary\":\"Button_primary__CVuDV\",\"success\":\"Button_success__qdwm8\",\"error\":\"Button_error__A4xET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"wrapper\":\"Loader_wrapper__YL9BV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"btnblock\":\"Auth_btnblock__VgQZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\",\"answers\":\"QuizCreator_answers__2JwhW\",\"btnblock\":\"QuizCreator_btnblock__1AT9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AnsweraList_list__3hJLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","import React from \"react\";\nimport s from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={s.Backdrop} onClick={props.onClick}/>\n\nexport default Backdrop","import React,{Component,Fragment} from 'react'\nimport s from './Drawer.module.scss'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from \"react-router-dom\";\n\nconst links = [\n    {to: '/', label: 'QuizList', exact: true},\n    {to: '/auth', label: 'Authentication', exact: false},\n    {to: '/quiz-creator', label: 'Quiz-creator', exact: false}\n]\n\nclass Drawer extends Component{\n\n    renderLinks = () => {\n        return(\n            links.map((link,index)=>{\n                return(\n                    <li key={index}>\n                        <NavLink\n                            to={link.to}\n                            exact={link.exact}\n                            activeClassName={s.active}\n                            onClick={this.props.closeMenu}\n                        >\n                            {link.label }\n                        </NavLink>\n                    </li>\n                )\n            })\n        )\n    }\n\n    render() {\n        let classes = [\n            s.Drawer\n        ]\n\n        if(!this.props.isOpen){\n            classes.push(s.close)\n        }\n        return(\n            <Fragment>\n                <nav className={classes.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.closeMenu} /> : null}\n            </Fragment>\n        )\n    }\n}\n\nexport default Drawer\n","import React from 'react'\nimport s from './MenuToggle.module.scss'\n\nconst MenuToggle = props => {\n    let classes = [\n        s.MenuToggle,\n        'fa'\n    ]\n\n    if(props.isOpen){\n        classes.push('fa-times')\n        classes.push(s.open)\n    }else {\n        classes.push('fa-bars')\n    }\n\n    return(\n        <i\n            className={classes.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","export default __webpack_public_path__ + \"static/media/logo.cc1b798b.svg\";","import React from 'react'\nimport s from './Header.module.scss';\nimport Drawer from \"../Navigation/Drawer/Drawer\";\nimport MenuToggle from \"../Navigation/MenuToggle/MenuToggle\";\nimport logo from './../../img/logo.svg'\nimport {Link} from \"react-router-dom\";\n\nconst Header = props => {\n    return(\n        <header className={s.Header}>\n            <Drawer\n                isOpen={props.menu}\n                closeMenu={props.closeMenu}\n            />\n            <MenuToggle\n                onToggle={props.toggleMenu}\n                isOpen={props.menu}\n            />\n            <Link to='/'>\n                <img src={logo} alt=\"logo\"/>\n            </Link>\n        </header>\n    )\n}\n\nexport default Header","import React, {Component} from 'react'\nimport s from './Layout.module.scss'\nimport Header from \"../../components/Header/Header\";\n\nclass Layout extends Component {\n\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n\n    }\n\n    closeMenuHandler = () => {\n        this.setState({\n            menu: false\n        })\n\n    }\n\n    render() {\n        return(\n            <div className={s.Layout}>\n                <Header\n                    menu={this.state.menu}\n                    toggleMenu={this.toggleMenuHandler}\n                    closeMenu={this.closeMenuHandler}\n                />\n                <main className={s.wrapper}>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout","import React from 'react'\nimport s from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n    const classes = [s.item]\n\n    if(props.answerState){\n        classes.push(s[props.answerState])\n    }\n\n    return(\n        <li\n            className={classes.join(' ')}\n            onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {\n                props.answer.text\n            }\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport s from './AnsweraList.module.scss'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswerList = props => {\n    return(\n        <ul className={s.list }>\n            {props.answers.map((answer,index) => {\n                return(\n                    <AnswerItem\n                        key = {index}\n                        answer = {answer}\n                        onAnswerClick={props.onAnswerClick}\n                        answerState={props.answerState ? props.answerState[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default AnswerList","import React from 'react'\nimport s from './ActiveQuiz.module.scss'\nimport AnswerList from \"./AnsweraList/AnsweraList\";\n\nconst ActiveQuiz = (props) => {\n    return(\n        <div className={s.wrapper}>\n            <div className={s.item}>\n                <div className={s.top}>\n                    <h2 className={s.head}>\n                        <span>{props.answerNumber}.</span> {props.question}\n                    </h2>\n                    <p className={s.counter}>\n                        {props.answerNumber} of {props.quizLenth}\n                    </p>\n                </div>\n                <AnswerList\n                    answers={props.answers}\n                    onAnswerClick={props.onAnswerClick}\n                    answerState={props.answerState}\n                />\n            </div>\n        </div>\n\n    )\n}\n\nexport default ActiveQuiz","import React from 'react'\nimport s from './Button.module.scss'\n\nconst Button = props => {\n\n    let classes = [\n        s.Button,\n        s[props.type]\n    ]\n\n    return(\n        <button onClick={props.onClick}\n                className={classes.join(' ')}\n                disabled={props.disabled}>\n            {props.children}\n        </button>\n    )\n}\n\nexport default Button","import React from 'react'\nimport s from './FinishedQuiz.module.scss'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props =>{\n\n    const rightAnswersCount = Object.keys(props.results).reduce((total,key) => {\n        if(props.results[key] === 'success'){\n            total++\n        }\n\n        return total\n    },0)\ndebugger\n    return(\n        <div className={s.wrapper}>\n            <h1 className={s.isFinished}> {props.quiz.name} is finished</h1>\n            <ul className={s.checkList}>\n                {props.quiz.map((quizItem,index) => {\n                        let classes = [\n                            'fa',\n                            props.results[quizItem.id] === 'success' ? 'fa-check' : 'fa-times',\n                            s[props.results[quizItem.id]]\n                        ]\n                        return(\n                            <li key={index}>\n                                <p><span>{index + 1}. </span>{quizItem.question}</p>\n                                <i className={classes.join(' ')} />\n                            </li>\n                        )\n                    })}\n            </ul>\n            <p className={s.result}>\n                Number of right answers: {rightAnswersCount} / {props.quiz.length}\n            </p>\n            <div className={s.buttonBlock}>\n                <Button type='primary' onClick={props.onRetry}>\n                    repeat\n                </Button>\n                <Link to='/'>\n                    <Button type='success' >\n                        test list\n                    </Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL:'https://react-quizy-bcaf7-default-rtdb.firebaseio.com/'\n})","import React from 'react'\nimport s from './Loader.module.scss'\n\nconst Loader = props => {\n    return(\n        <div className={s.wrapper}>\n            <div className={s.Loader}/>\n        </div>\n    )\n}\n\nexport default Loader","import React, {Component} from 'react'\nimport s from './Quiz.module.scss'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from \"../../axios/axios-quiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nclass Quiz extends Component{\n    state = {\n        activeQuestion: 0,\n        isFinished: false ,\n        answerState: null, // { [id]: 'success' 'error' }\n        results: {},\n        quiz: [],\n        loading: true\n    }\n\n    onAnswerClickHandler = answerId =>{\n\n        if(this.state.answerState){\n            const key = Object.keys(this.state.answerState)[0]\n            if(this.state.answerState[key] === 'success'){\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.rightAnswerId === answerId){\n\n            if(!results[question.id]){\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: { [answerId] : 'success'},\n            })\n\n            const timeout = window.setTimeout(() => {\n\n                if (this.isQuizFinished()){\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n\n                window.clearTimeout(timeout)\n            }, 500)\n\n        }else {\n            results[question.id] = 'error'\n            this.setState({\n                results,\n                answerState: { [answerId] : 'error'}\n            })\n        }\n    }\n\n    isQuizFinished(){\n        return(this.state.activeQuestion + 1 === this.state.quiz.length)\n    }\n\n    retryHandler = () => {\n         this.setState({\n             activeQuestion: 0,\n             isFinished: false ,\n             answerState: null, // { [id]: 'success' 'error' }\n             results: {}\n         })\n    }\n\n    async componentDidMount() {\n        try {\n           const response = await axios.get(`quizes/${this.props.match.params.id}.json`)\n            const quiz = response.data\n\n            this.setState({\n                quiz,\n                loading:false\n            })\n        } catch (e){\n            console.log(e)\n        }\n    }\n\n    render() {\n        return(\n            <div className={s.Quiz}>\n                <h1>{this.state.quizName}</h1>\n                {\n                    this.state.loading\n                    ? <Loader/>\n                    : <div className={s.wrapper}>\n                            {\n                                this.state.isFinished\n                                    ? <FinishedQuiz\n                                        results={this.state.results}\n                                        quiz={this.state.quiz}\n                                        onRetry ={this.retryHandler}\n                                    />\n                                    : <ActiveQuiz\n                                        question={this.state.quiz[this.state.activeQuestion].question}\n                                        answers={this.state.quiz[this.state.activeQuestion].answers}\n                                        onAnswerClick={this.onAnswerClickHandler}\n                                        quizLenth={this.state.quiz.length}\n                                        answerNumber={this.state.activeQuestion + 1}\n                                        answerState={this.state.answerState}\n                                    />\n                            }\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React from 'react'\nimport s from './Input.module.scss'\n\nconst Input = props => {\n\n    const isInvalid = ({valid, touched, shouldValidate}) => {\n        return !valid && touched && shouldValidate\n    }\n\n\n    const inputType = props.type || 'text'\n    const cls = [s.Input]\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if(isInvalid(props)){\n        cls.push(s.invalid)\n    }\n\n    return(\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {\n                isInvalid(props)\n                ? <p>{props.errorMessage || 'Check the correction on information'}</p>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default Input","import is from \"is_js\";\n\nexport function createControl(config,validation){\n    return{\n        ...config,\n        validation,\n        valid:!validation,\n        touched: false,\n        value:''\n    }\n}\n\nexport function validateControl(value, validation){\n\n    if(!validation){\n        return true\n    }\n\n    let isValid = true\n\n    if(validation.required){\n        isValid = value.trim(' ') !== '' && isValid\n\n    }\n    if(validation.email){\n        isValid = is.email(value) && isValid\n    }\n    if(validation.minLength){\n        isValid = value.length >= validation.minLength &&isValid\n    }\n\n    return isValid\n}","import React,{Component} from 'react'\nimport s from './Auth.module.scss'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport {validateControl} from \"../../form/formFramework\";\nimport axios from \"axios\";\n\nexport default class Auth extends Component{\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Enter correct email \"example@test.com\"',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Password',\n                errorMessage: 'Enter correct password \"min: 6 symbols\"',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n    loginHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        }\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCVKXfuva7q5TVw-xF3o79M92y-MUDZECE', authData)\n            console.log(response.data)\n        } catch (e){\n            console.log(e)\n        }\n    }\n\n    registerHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        }\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCVKXfuva7q5TVw-xF3o79M92y-MUDZECE', authData)\n            console.log(response.data)\n        } catch (e){\n            console.log(e)\n        }\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    onChangeHandler = (event, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = validateControl(control.value,control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name =>{\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n\n        this.setState({\n            formControls, isFormValid\n        })\n    }\n\n    renderInputs = () => {\n        return Object.keys(this.state.formControls).map((controlName,index)=>{\n            const control = this.state.formControls[controlName]\n            return(\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    errorMessage={control.errorMessage}\n                    shouldValidate={!!control.validation}\n                    onChange={event => {\n                        this.onChangeHandler(event,controlName)\n                    }}\n                />\n            )\n        })\n    }\n\n    render() {\n        return(\n            <div className={s.Auth}> \n                <h1>Authentication</h1>\n                <form onSubmit={this.submitHandler}>\n\n                    {this.renderInputs()}\n\n                    <div className={s.btnblock}>\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Login\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                        >\n                            Register\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport s from './Select.module.scss'\n\nconst Select = props => {\n\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return(\n        <div className={s.Select}>\n            <label htmlFor={htmlFor}>\n                {props.label}\n            </label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option,index)=>{\n                    return(\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","import React,{Component,Fragment} from 'react'\nimport s from './QuizCreator.module.scss'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport {createControl,validateControl } from \"../../form/formFramework\";\nimport Select from \"../../components/UI/Select/Select\";\nimport axios from \"../../axios/axios-quiz\";\n\nconst createOptionControl = (number) => {\n    return createControl({\n        label:`Variant ${number}`,\n        errorMessage: \"Value can't be empty\",\n        value: '',\n        id: number\n    },{\n        required:true\n    })\n}\n\nconst createFormControls = () => {\n    return {\n        question: createControl({\n            label: 'Enter the question',\n            errorMessage: \"Question can't be empty\"\n        },{\n            required: true\n        }),\n        option1: createOptionControl(1),\n        option2:createOptionControl(2),\n        option3:createOptionControl(3),\n        option4:createOptionControl(4)\n    }\n}\n\nexport default class QuizCreator extends Component{\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n\n        const quiz = this.state.quiz.concat()\n        const index = quiz.length + 1\n        const {question, option1, option2, option3, option4} = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {\n                    text: option1.value,\n                    id: option1.id\n                },\n                {\n                    text: option2.value,\n                    id: option2.id\n                },\n                {\n                    text: option3.value,\n                    id: option3.id\n                },\n                {\n                    text: option4.value,\n                    id: option4.id\n                },\n            ]\n        }\n\n        quiz.push(questionItem)\n\n        this.setState({\n            quiz,\n            rightAnswerId: 1,\n            isFormValid: false,\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = async event => {\n        event.preventDefault()\n        try{\n            await axios.post('quizes.json', this.state.quiz)\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControls()\n            })\n        } catch (e){\n            console.log(e)\n        }\n    }\n\n\n\n    changeHandler = (value, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = value\n        control.touched = true\n        control.valid = validateControl(control.value,control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name =>{\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n\n        this.setState({\n            formControls, isFormValid\n        })\n    }\n\n    renderInputs = () => {\n        return Object.keys(this.state.formControls).map((controlName,index)=>{\n            const control = this.state.formControls[controlName]\n            return(\n                <Fragment key={index + controlName}>\n                    <Input\n                        type={control.type}\n                        value={control.value}\n                        valid={control.valid}\n                        touched={control.touched}\n                        label={control.label}\n                        errorMessage={control.errorMessage}\n                        shouldValidate={!!control.validation}\n                        onChange={event => {\n                            this.changeHandler(event.target.value,controlName)\n                        }}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Fragment>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render(){\n        return(\n            <div className={s.QuizCreator}>\n                <h1>QuizCreator </h1>\n                <form onSubmit={this.submitHandler}>\n\n                    {this.renderInputs()}\n\n                    <Select\n                        label='Select the right answer'\n                        value={this.state.rightAnswerId}\n                        onChange={this.selectChangeHandler}\n                        options={[\n                            {\n                                text:1,\n                                value:1,\n                            },\n                            {\n                                text:2,\n                                value:2,\n                            },\n                            {\n                                text:3,\n                                value:3,\n                            },\n                            {\n                                text:4,\n                                value:4,\n                            }\n                        ]}\n                    />\n\n                    <div className={s.btnblock}>\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Add question\n                        </Button>\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >\n                            Create quiz\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React,{Component} from 'react'\nimport s from './QuizList.module.scss'\nimport {NavLink} from \"react-router-dom\";\nimport axios from \"../../axios/axios-quiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nexport default class QuizList extends Component{\n\n    state = {\n        quizes:[],\n        loading: true\n    }\n\n    renderQuizList(){\n        return this.state.quizes.map((quiz,index)=>{\n            return (\n                <li key={quiz.id}>\n                    <NavLink\n                        to={'/quiz/' + quiz.id}\n                    >\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    async componentDidMount() {\n        try{\n            const response = await axios.get('quizes.json')\n            console.log(response.data)\n            const quizes = []\n            Object.keys(response.data).forEach((key,index)=>{\n                quizes.push({\n                    id:key,\n                    name: `Test ${index + 1}`\n                })\n            })\n            this.setState({\n                quizes,\n                loading: false\n            })\n            } catch (e){\n            console.log(e)\n        }\n    }\n\n    render(){\n        return(\n            <div className={s.QuizList}>\n                <div>\n                    <h1>QuizList</h1>\n                    {\n                        this.state.loading\n                        ? <Loader/>\n                        : <ul>{this.renderQuizList()}</ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import './App.css';\nimport {Switch, Route} from 'react-router-dom'\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\"\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n          <Route path='/auth' component={Auth} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/' component={QuizList} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst application = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      {application}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}